#!/bin/sh

APP_ROOT="$(cd $(dirname $(readlink -f $0))/../../../..; pwd)"

print_help () {
  echo "Usage: $(basename $0) [options] [jailname]" >&2;
  echo "Options:" >&2;
  echo " -b  Update the system basejail before jail" >&2;
  echo " -A  Update all jails" >&2;
}

while getopts "bAh" opt; do
  case $opt in
    b) UPDATE_BASEJAIL=1;;
    A) UPDATE_ALL_FLAG=1;;
    h) print_help; exit 0;;
    \?) print_help; exit 1;;
  esac
done

##
## GET PARAMS
##

for lastarg; do true; done
JAIL_NAME="$lastarg"

if [ -z "$JAIL_NAME" ]; then print_help; exit 1; fi

#list all installed jails, running or not
jail_rec=$(ezjail-admin list | tail -n +3 | grep "\b$JAIL_NAME\b")

if [ -z "$jail_rec" ]; then
  echo "$(basename $0): Jail '$JAIL_NAME' is not installed, exiting." >&2;
  exit 1
fi

if [ $(echo "$jail_rec" | awk '{print $2}') != 'N/A' ]; then
  JAIL_UP=1
fi

if [ $(id -u) != 0 ]; then
  echo "This script must be run as root." 1>&2
  exit 1
fi

##
## RUN HOOKS, UPDATE JAIL
##

jail_hook () {
  local hookname="$1" hookenv="$2"
  sh -e "$APP_ROOT/src/jail-hook.sh" "$JAIL_NAME" "$hookname" "$hookenv"
}


jail_hook 'preupdate' 'host'

# ... update jail ...
if [ -n "$UPDATE_BASEJAIL" ]; then
  #update basejail using freebsd-update. currently broke
  #ezjail-admin update -u

  #update the basejail ports tree
  if [ -d /usr/jails/basejail/usr/ports ]; then
    ezjail-admin update -P
  fi
fi

if [ -z "$JAIL_UP" ]; then
  echo "Jail is not currently running, required for update ..."
  if ! ezjail-admin start "$JAIL_NAME"; then
    echo "$(basename $0): Unable to start jail '$JAIL_NAME', exiting" >&2
    exit 1
  fi
fi

jail_hook 'update' 'jail'

jail_hook 'preupdate' 'host'

if [ -z "$JAIL_UP" ]; then
  echo "Update complete. Returning jail to stopped state ..."
  ezjail-admin stop "$JAIL_NAME"
fi
