#!/bin/sh

APP_ROOT="$(cd $(dirname $(readlink -f $0))/../../../..; pwd)"

print_help () {
  echo "Usage: $(basename $0) [options] [jailname]" >&2;
	echo "Options:" >&2;
	echo " -A  Update all jails" >&2;
}

if [ $(id -u) != 0 ]; then
  echo "This script must be run as root." 1>&2
  exit 1
fi

## Parse args and get jail environmental vars

while getopts "Ah" opt; do
  case $opt in
    A) UPDATE_ALL_FLAG=1;;
    h) print_help; exit 0;;
    \?) print_help; exit 1;;
  esac
done

for lastarg; do true; done
JAIL_ID="$lastarg"

if [ -z "$JAIL_ID" ]; then print_help; exit 1; fi

jailconf="/usr/jails/$JAIL_ID/etc/serverconf"

if [ ! -f "$jailconf" ]; then
  JAIL_TYPE="default"
else
  JAIL_TYPE=$(sh -e "$APP_ROOT/src/confkey.sh" -f "$jailconf" -k "jailtype")
  if [ -z "$JAIL_TYPE" ]; then JAIL_TYPE="default"; fi
fi

#ezjail-admin lists all installed jails, running or not
jail_rec=$(ezjail-admin list | tail -n +3 | grep "\b$JAIL_ID\b")

if [ -n "$jail_rec" ]; then
  JAIL_IP=$(echo "$jail_rec" | awk '{print $3}')
else
  echo "$(basename $0): Jail '$JAIL_ID' is not installed, exiting." >&2;
  exit 1
fi

if [ $(echo "$jail_rec" | awk '{print $2}') != 'N/A' ]; then
  JAIL_UP=1
fi

## Helper functions

jail_hook () {
  local hookname="$1" hookenv="$2"
  env JAIL_ID="$JAIL_ID" \
      JAIL_IP="$JAIL_IP" \
      JAIL_TYPE="$JAIL_TYPE" \
      sh -e "$APP_ROOT/src/jail-hook.sh" "$hookname" "$hookenv"
}

## And off we go ...

if [ -z "$JAIL_UP" ]; then
  echo "Jail is not currently running, required for update ..."
  if ! ezjail-admin start "$JAIL_ID"; then
    echo "$(basename $0): Unable to start jail '$JAIL_ID', exiting" >&2
    exit 1
  fi
fi

jail_hook 'preupdate' 'host'

jail_hook 'update' 'jail'

jail_hook 'preupdate' 'host'

if [ -z "$JAIL_UP" ]; then
  echo "Update complete. Returning jail to stopped state ..."
  ezjail-admin stop "$JAIL_ID"
fi
