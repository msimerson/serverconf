#!/bin/sh -e
## Create an empty jail and set its environment.
## This script looks for the file hooks: preconf, conf, and postconf,located within
## the jail type directory.
## Preconf and postconf are run on the host system, conf is run within the jail itself.

#shoud be something like /usr/local/opt/serverconf
APP_ROOT="$(cd $(dirname $(readlink -f $0))/../../../..; pwd)"
#add current user to jail by default (even if sudo'd)
JAIL_USER="$(who -m | cut -d ' ' -f1)"
JAIL_TYPE_DEFAULT='default'

print_help () {
  echo "Usage: $(basename $0) [options] -i=ipaddr" >&2;
  echo " -i=ipaddr  Address to bind jail" >&2;
  echo "Options:" >&2;
  echo " -n=name    Jail name" >&2;
  echo " -c=conf    Jail config type (see $APP_ROOT/jails)" >&2;
  echo " -u=user    Add user to jail [default is current user]" >&2;
  echo " -N         Don't run the hooks for '$JAIL_TYPE_DEFAULT'" >&2;
  echo " -h         Print this help message" >&2;
}

while getopts "n:i:c:u:Nh" opt; do
  case $opt in
    n) JAIL_NAME="$OPTARG";;
    i) JAIL_IP="$OPTARG";;
    c) JAIL_TYPE="$OPTARG";;
    u) JAIL_USER="$OPTARG";;
    N) NO_DEFAULT_HOOK=1;;
    h) print_help; exit 0;;
    \?) print_help; exit 1;;
  esac
done

if [ $(id -u) != 0 ]; then
  echo "$(basename $0): This script must be run as root." 1>&2
  exit 1
fi

##
## GET PARAMS
##

if [ -z "$JAIL_TYPE" ]; then JAIL_TYPE="$JAIL_TYPE_DEFAULT"; fi

JAIL_CONF_DIR=$(sh -e "$APP_ROOT/src/get-jail-conf.sh" "$JAIL_TYPE")

# Generate JAIL_NAME if not provided

if [ -z "$JAIL_NAME" ]; then
  #find the highest number of a given type
  n=$(find "/usr/local/etc/ezjail" -name "$JAIL_TYPE*" -type f -maxdepth 1 | \
         xargs -n1 basename | sort -r | head -n1 | tr -cd '[:digit:]')

  #test if number
  if echo "$n" | egrep -q '^[0-9]+$'; then
    #increment by one and pad out two places
    n=$(printf "%02d" "$((n+1))")
  else
    n='00'
  fi
  JAIL_NAME="${JAIL_TYPE}$n"
fi

#ezjail converts all non-alphanums to underscore, we should too
JAIL_NAME=$(echo -n "$JAIL_NAME" | tr -c '[[:alnum:]]' '_')

if [ -e "/usr/local/etc/ezjail/$JAIL_NAME" ]; then
  echo "$(basename $0): Jail '$JAIL_NAME' already exists, use a different name." >&2;
  exit 1
fi

if [ -z "$JAIL_IP" ]; then
  print_help
  exit 1
elif jls -v | grep "$JAIL_IP" > /dev/null; then
  echo -n "Address $JAIL_IP already used, you may experience network problems." 1>&2
  read -p " Continue? (y/n) " reply
  if [ "$reply" != 'y' -a "$reply" != 'yes' ]; then
    exit 0
  fi
fi

##
## Helper functions
##

cp_conf () {
  local srcpath="$1" destdir="$2" replacevars="$3" ignorevars="$4"
  env REPLACE_VARS="$replacevars JAIL_NAME JAIL_IP JAIL_TYPE JAIL_USER JAIL_CONF_DIR" \
      NO_REPLACE_VARS="$ignorevars" \
      JAIL_NAME="$JAIL_NAME" \
      JAIL_IP="$JAIL_IP" \
      JAIL_TYPE="$JAIL_TYPE" \
      JAIL_USER="$JAIL_USER" \
      JAIL_CONF_DIR="$JAIL_CONF_DIR" \
      sh -e "$APP_ROOT/src/cp-conf.sh" "$srcpath" "$destdir"
}

jail_hook () {
  local hookname="$1" hookenv="$2" removeonerror=1;
  if [ -n "$REMOVE_JAIL_ON_ERROR" ]; then removeonerror="$REMOVE_JAIL_ON_ERROR"; fi
  env REMOVE_JAIL_ON_ERROR="$removeonerror" \
      NO_DEFAULT_HOOK="$NO_DEFAULT_HOOK" \
      JAIL_USER="$JAIL_USER" \
      sh -e "$APP_ROOT/src/jail-hook.sh" "$JAIL_NAME" "$hookname" "$hookenv"
}

##
## Create jail
##

if ! ezjail-admin create "$JAIL_NAME" "$JAIL_IP"; then
  echo "$(basename $0): Unable to create jail, aborting." >&2;
  exit 1
fi

##
## Set up jail's /etc/serverconf
##

jailconf="/usr/jails/$JAIL_NAME/etc/serverconf"

if [ ! -f "$jailconf" ]; then touch "$jailconf"; fi

if ! sh -e "$APP_ROOT/src/confkey.sh" -f "$jailconf" -k "jailtype" -v "$JAIL_TYPE"; then
  echo "$(basename $0): Error setting jail config file, exiting." >&2
  exit 1
fi

##
## RUN HOOKS
##

JAIL_DEFAULT_CONF_DIR=$(sh -e "$APP_ROOT/src/get-jail-conf.sh" "$JAIL_TYPE_DEFAULT")

#
# Preconf - can modify config dir before copying into jail
#

jail_hook 'preconf' 'host'

# copy jail config to host

if [ -d "$JAIL_DEFAULT_CONF_DIR/host" ]; then
  cp_conf "$JAIL_DEFAULT_CONF_DIR/host" /
fi

if [ "$JAIL_TYPE" != "$JAIL_TYPE_DEFAULT" -a -d "$JAIL_CONF_DIR/host" ]; then
  cp_conf "$JAIL_CONF_DIR/host" /
fi

#
# Conf - start jail and run scripts within it
#

echo "Configuring jail ..."

if ! ezjail-admin start "$JAIL_NAME"; then
  echo "$(basename $0): Unable to start jail, aborting." >&2;
  exit 1
fi

# copy jail config to jail after conf has chance to install packages

if [ -d "$JAIL_DEFAULT_CONF_DIR/jail" ]; then
  cp_conf "$JAIL_DEFAULT_CONF_DIR/jail" "/usr/jails/$JAIL_NAME"
fi

if [ "$JAIL_TYPE" != "$JAIL_TYPE_DEFAULT" -a -d "$JAIL_CONF_DIR/jail" ]; then
  cp_conf "$JAIL_CONF_DIR/jail" "/usr/jails/$JAIL_NAME"
fi

jail_hook 'conf' 'jail'

#
# Postconf
#

jail_hook 'postconf' 'host'

echo "Restarting jail ..."

if ! ezjail-admin restart "$JAIL_NAME"; then
  echo "$(basename $0): Unable to restart jail, aborting." >&2;
  exit 1
fi

echo "$JAIL_NAME jail running on $JAIL_IP"
